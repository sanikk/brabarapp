from werkzeug.security import generate_password_hash
from db_connection import executemany


def fill_db():
    accounts = [
        (
            "jekku",
            "jekkujekku",
            "2025-01-01 12:00:00",
            "2025-01-01 12:00:00",
            "2025-01-01 12:00:00",
            "jekku@example.com",
            "hashedpassword1",
            "Vesuri",
            "Jekku",
            "Vesuri",
            "This is a test account.",
        ),
        (
            "esko",
            "eskoesko",
            "2025-01-01 13:00:00",
            "2025-01-01 13:00:00",
            "2025-01-01 13:00:00",
            "esko@example.com",
            "hashedpassword2",
            "Esko",
            "Mörkö",
            "A different test account.",
        ),
        (
            "tauno",
            "taunotauno",
            "2025-01-02 14:00:00",
            "2025-01-02 14:00:00",
            "2025-01-02 14:00:00",
            "tauno@example.com",
            "hashedpassword3",
            "Tauno",
            "Tanhuvainen",
            "This account is a bit different.",
        ),
        (
            "pekka",
            "pekkapekka",
            "2025-01-02 15:00:00",
            "2025-01-02 15:00:00",
            "2025-01-02 15:00:00",
            "pekka@example.com",
            "hashedpassword4",
            "Pekka",
            "Piupelipoo",
            "Sample test account for Pekka.",
        ),
        (
            "camacho",
            "camacho",
            "2025-01-03 16:00:00",
            "2025-01-03 16:00:00",
            "2025-01-03 16:00:00",
            "camacho@example.com",
            "hashedpassword5",
            "Camacho",
            "Mountain Dew",
            "Test account for Camacho.",
        ),
        (
            "molly",
            "millions",
            "2025-01-03 17:00:00",
            "2025-01-03 17:00:00",
            "2025-01-03 17:00:00",
            "molly@example.com",
            "hashedpassword6",
            "Molly",
            "Millions",
            "Account with a different name.",
        ),
        (
            "case",
            "casecase",
            "2025-01-04 18:00:00",
            "2025-01-04 18:00:00",
            "2025-01-04 18:00:00",
            "case@example.com",
            "hashedpassword7",
            "Henry",
            "Case",
            "Test account for Henry Case.",
        ),
        (
            "lupus",
            "lupuslupus",
            "2025-01-04 19:00:00",
            "2025-01-04 19:00:00",
            "2025-01-04 19:00:00",
            "lupus@example.com",
            "hashedpassword8",
            "Lupus",
            "Yonderboy",
            "Test account for Lupus Yonderboy.",
        ),
        (
            "deane",
            "deanedeane",
            "2025-01-05 20:00:00",
            "2025-01-05 20:00:00",
            "2025-01-05 20:00:00",
            "deane@example.com",
            "hashedpassword9",
            "Julius",
            "Deane",
            "Test account for Julius Deane.",
        ),
        (
            "longhum",
            "longhum",
            "2025-01-05 21:00:00",
            "2025-01-05 21:00:00",
            "2025-01-05 21:00:00",
            "longhum@example.com",
            "hashedpassword10",
            "Long",
            "Hum",
            "Account for Long Hum.",
        ),
        (
            "danielle",
            "danielle",
            "2025-01-06 22:00:00",
            "2025-01-06 22:00:00",
            "2025-01-06 22:00:00",
            "danielle@example.com",
            "hashedpassword11",
            "Danielle",
            "Stark",
            "Account for Danielle Stark.",
        ),
        (
            "crowjane",
            "crowjane",
            "2025-01-06 23:00:00",
            "2025-01-06 23:00:00",
            "2025-01-06 23:00:00",
            "crowjane@example.com",
            "hashedpassword12",
            "Crow",
            "Jane",
            "Test account for Crow Jane.",
        ),
        (
            "robin",
            "robinrobin",
            "2025-01-07 00:00:00",
            "2025-01-07 00:00:00",
            "2025-01-07 00:00:00",
            "robin@example.com",
            "hashedpassword13",
            "Robin",
            "Lanier",
            "Account for Robin Lanier.",
        ),
        (
            "virginia",
            "virginia",
            "2025-01-07 01:00:00",
            "2025-01-07 01:00:00",
            "2025-01-07 01:00:00",
            "virginia@example.com",
            "hashedpassword14",
            "Virginia",
            "Rambaldi",
            "Account for Virginia Rambaldi.",
        ),
    ]
    sql = """INSERT INTO accounts (username, password, added, last_modified, last_logged_in, email, billing_info, firstname, lastname, description)
         VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"""

    executemany(
        sql,
        [
            (
                acc[0],
                generate_password_hash(acc[1]),
                acc[2],
                acc[3],
                acc[4],
                acc[5],
                acc[6],
                acc[7],
                acc[8],
                acc[9],
            )
            for acc in accounts
        ],
    )

    #     restaurants = [
    #         ("le bar", 1, "Mannerheimintie 1", 60.1692, 24.9402, 123456789),
    #         ("le restaurant", 2, "Mannerheimintie 3", 60.1700, 24.9410, 987654321),
    #         ("le other restaurant", 3, "Korkeavuorenkatu 22", 60.1605, 24.9507, 234567890),
    #         ("good restaurant", 4, "Liisankatu 14", 60.1801, 24.9490, 345678901),
    #         ("bar f", 1, "Kaivokatu 3", 60.1715, 24.9415, 456789012),
    #         ("bar t", 2, "Simonkatu 4", 60.1680, 24.9310, 567890123),
    #         ("ristorant E", 3, "Kaivokatu 2", 60.1710, 24.9400, 678901234),
    #     ]
    #     sql = """INSERT INTO restaurants (name, account_id, address, latitude, longitude, place_id) VALUES (?, ?, ?, ?, ?, ?)"""
    #     executemany(sql, restaurants)
    #
    #     events = [
    #         (
    #             "B-Day Bash",
    #             "2025-02-01 18:00:00",
    #             "2025-02-01 23:00:00",
    #             1,
    #             1,
    #             "Celebrate a birthday bash!",
    #         ),
    #         (
    #             "The Ritual",
    #             "2025-01-30 20:00:00",
    #             "2025-01-30 23:30:00",
    #             2,
    #             2,
    #             "A mysterious ritual event.",
    #         ),
    #         (
    #             "Tuomiopäivä - Keinäsen Nimipäivä",
    #             "2025-06-06 12:00:00",
    #             "2025-06-06 15:00:00",
    #             3,
    #             1,
    #             "A special name day celebration.",
    #         ),
    #         (
    #             "KrisKros Megaparty",
    #             "2025-04-30 21:00:00",
    #             "2025-05-01 02:00:00",
    #             1,
    #             4,
    #             "Get ready for a KrisKros mega event!",
    #         ),
    #         (
    #             "WappuLounas",
    #             "2025-05-01 11:00:00",
    #             "2025-05-01 14:00:00",
    #             4,
    #             4,
    #             "A traditional Wappu lunch.",
    #         ),
    #         (
    #             "Trivia Night",
    #             "2025-02-14 19:00:00",
    #             "2025-02-14 21:00:00",
    #             5,
    #             5,
    #             "Test your knowledge at trivia night.",
    #         ),
    #         (
    #             "Jazz Evening",
    #             "2025-03-10 18:30:00",
    #             "2025-03-10 22:00:00",
    #             6,
    #             6,
    #             "Enjoy live jazz performances.",
    #         ),
    #         (
    #             "Coding Marathon",
    #             "2025-04-05 09:00:00",
    #             "2025-04-05 18:00:00",
    #             7,
    #             7,
    #             "Collaborate and code all day.",
    #         ),
    #         (
    #             "Art Showcase",
    #             "2025-02-20 17:00:00",
    #             "2025-02-20 20:30:00",
    #             1,
    #             8,
    #             "Local artists showcase their work.",
    #         ),
    #         (
    #             "Open Mic Night",
    #             "2025-03-25 19:00:00",
    #             "2025-03-25 22:00:00",
    #             2,
    #             9,
    #             "Share your talent or watch others perform.",
    #         ),
    #         (
    #             "Wine Tasting",
    #             "2025-04-18 18:00:00",
    #             "2025-04-18 21:00:00",
    #             3,
    #             10,
    #             "Sample fine wines with friends.",
    #         ),
    #         (
    #             "Gaming Tournament",
    #             "2025-05-12 10:00:00",
    #             "2025-05-12 18:00:00",
    #             4,
    #             11,
    #             "Compete in a day-long gaming event.",
    #         ),
    #         (
    #             "Book Club Meetup",
    #             "2025-06-07 16:00:00",
    #             "2025-06-07 18:00:00",
    #             5,
    #             12,
    #             "Discuss the latest book with fellow readers.",
    #         ),
    #         (
    #             "Charity Gala",
    #             "2025-06-20 19:00:00",
    #             "2025-06-20 23:00:00",
    #             6,
    #             13,
    #             "Support a good cause at this elegant gala.",
    #         ),
    #         (
    #             "Summer Picnic",
    #             "2025-07-15 12:00:00",
    #             "2025-07-15 16:00:00",
    #             7,
    #             14,
    #             "Join us for a relaxing summer picnic.",
    #         ),
    #     ]
    #     sql = """INSERT INTO events (active, name, start_time, end_time, restaurant_id, account_id, description) VALUES (1, ?, ?, ?, ?, ?, ?)"""
    #     executemany(sql, events)
    #
    #     ratings = [
    #         (2, 1, 5, "Great service, loved the food!"),
    #         (3, 1, 4, "Nice ambiance but could improve."),
    #         (4, 2, 3, "Delicious dishes, will visit again!"),
    #         (5, 2, 4, "Good but overpriced drinks."),
    #         (1, 3, 5, "Amazing flavors and fast service!"),
    #         (4, 3, 4, "Cozy place, enjoyed the experience."),
    #         (5, 4, 5, "Excellent menu, very satisfying!"),
    #         (2, 5, 3, "Decent food but slow service."),
    #         (3, 6, 4, "Friendly staff, will return soon!"),
    #     ]
    #     sql = """INSERT INTO ratings (account_id, restaurant_id, rating, content) VALUES (?, ?, ?, ?)"""
    #     executemany(sql, ratings)
    #
    print("Database filled successfully!")


if __name__ == "__main__":
    fill_db()
